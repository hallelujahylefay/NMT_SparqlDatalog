[
    {
        "_id": "1501",
        "intermediary_question": "How many <movies> are there whose <director> is <Stanley Kubrick>?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick>  . }",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?uri <https://dbpedia.org/ontology/director> <https://dbpedia.org/resource/Stanley_Kubrick> . }",
        "dist": 7
    },
    {
        "_id": "2586",
        "intermediary_question": "What <city>'s <founded by> is <John Forbes (British Army officer)>",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/John_Forbes_(British_Army_officer)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/founded_by> <",
        "dist": 156
    },
    {
        "_id": "2653",
        "intermediary_question": "What is the <river> whose <river mouth> is <Dead Sea>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Dead_Sea>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/river_mouth> <https://dbpedia.org/resource/Dead_Sea> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 44
    },
    {
        "_id": "1055",
        "intermediary_question": "What is the <allegiance> of <John Kotelawala> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Kotelawala> <http://dbpedia.org/property/allegiance> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/John_Kotelawala> <https://dbpedia.org/ontology/allegiance> ?uri }",
        "dist": 11
    },
    {
        "_id": "705",
        "intermediary_question": "What is the total number of <race> of the <race horses> whose <breeder> is <Jacques  Van't  Hart> ?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/breeder> <http://dbpedia.org/resource/Jacques_Van't_Hart> . ?x <http://dbpedia.org/property/race> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?x <https://dbpedia.org/ontology/breeder> <https://dbpedia.org/resource/Jacques__Van't__Hart> . ?x <https://dbpedia.org/ontology/race> ?uri . }",
        "dist": 16
    },
    {
        "_id": "106",
        "intermediary_question": "What is the <incumbent> of the <Al Gore presidential campaign, 2000> and <president> of the <Ann Lewis>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000> <http://dbpedia.org/ontology/incumbent> ?uri. <http://dbpedia.org/resource/Ann_Lewis> <http://dbpedia.org/ontology/president> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000> <https://dbpedia.org/ontology/incumbent> ?uri . <https://dbpedia.org/resource/Ann_Lewis?> <https://dbpedia.org/ontology/president> ?uri }",
        "dist": 9
    },
    {
        "_id": "589",
        "intermediary_question": "What is the <region> of <Tom Perriello> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tom_Perriello> <http://dbpedia.org/ontology/region> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Tom_Perriello> <https://dbpedia.org/ontology/region> ?uri }",
        "dist": 4
    },
    {
        "_id": "2468",
        "intermediary_question": "What is the <layout> of the <automobiles> whose <related> is <Subaru Outback>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/related> <http://dbpedia.org/resource/Subaru_Outback> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/related> <https://dbpedia.org/resource/Subaru_Outback> . ?x <https://dbpedia.org/ontology/layout> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 54
    },
    {
        "_id": "2413",
        "intermediary_question": "What is the <address> of the <hotels> whose <operator> is <Starwood Hotels and Resorts Worldwide>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide> . ?x <http://dbpedia.org/property/address> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/operator> <https://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide> . ?x <https://dbpedia.org/ontology/address> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 68
    },
    {
        "_id": "1600",
        "intermediary_question": "What is the <mascot> of <Austin College> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Austin_College> <http://dbpedia.org/property/mascot> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Austin_College> <https://dbpedia.org/ontology/mascot> ?uri }",
        "dist": 11
    },
    {
        "_id": "2464",
        "intermediary_question": "What is the <university> of the <rugby player> who is the <headcoach> of <190617 Stanford rugby teams> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1906\u201317_Stanford_rugby_teams> <http://dbpedia.org/property/headcoach> ?x . ?x <http://dbpedia.org/ontology/university> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/190617_Stanford_rugby_teams> <https://dbpedia.org/ontology/headcoach> ?x . ?x <https://dbpedia.org/ontology/university> ?uri . }",
        "dist": 12
    },
    {
        "_id": "228",
        "intermediary_question": "Give me a count of <people> whose <official residence> is <Wilton, Connecticut>?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Wilton,_Connecticut>  . }",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?uri <https://dbpedia.org/ontology/official_residence> <https://dbpedia.org/resource/Wilton,_Connecticut> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>",
        "dist": 76
    },
    {
        "_id": "915",
        "intermediary_question": "What is the <honors> of the <person> who is the <film director> of <The Haunted House (1929 film)> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/The_Haunted_House_(1929_film)> <https://dbpedia.org/ontology/film_director> ?x . ?x <https://dbpedia.org/ontology/honors> ?uri . }",
        "dist": 14
    },
    {
        "_id": "794",
        "intermediary_question": "What is the <origin> of <Henry Cluney> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henry_Cluney> <http://dbpedia.org/property/origin> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Henry_Cluney> <https://dbpedia.org/ontology/origin> ?uri }",
        "dist": 11
    },
    {
        "_id": "3021",
        "intermediary_question": "List the <known for> of the <models> whose <place of birth> is <New Orleans>.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/New_Orleans> . ?x <http://dbpedia.org/property/knownFor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/place_of_birth> <https://dbpedia.org/resource/New_Orleans> . ?x <https://dbpedia.org/ontology/known_for> ?uri . ?x",
        "dist": 112
    },
    {
        "_id": "3543",
        "intermediary_question": "What is the <sport> of the <schools> whose <region> is <Capital region>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/region> <http://dbpedia.org/resource/Capital_region> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/region> <https://dbpedia.org/resource/Capital_region> . ?x <https://dbpedia.org/ontology/sport> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 50
    },
    {
        "_id": "1073",
        "intermediary_question": "What is the <developer> of the <Batch Monitor> and <distributed by> of the <Riddim Ribbon feat. The Black Eyed Peas>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Batch_Monitor> <http://dbpedia.org/property/developer> ?uri. <http://dbpedia.org/resource/Riddim_Ribbon_feat._The_Black_Eyed_Peas> <http://dbpedia.org/property/distributor> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Batch_Monitor> <https://dbpedia.org/ontology/developer> ?uri . <https://dbpedia.org/resource/Riddim_Ribbon_feat._The_Black_Eyed_Peas?> <https://dbpedia.org/ontology/distributed_by> ?uri }",
        "dist": 28
    },
    {
        "_id": "3351",
        "intermediary_question": "What is the <origin> of the <Xynisteri> and <Mavro>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Xynisteri> <http://dbpedia.org/ontology/origin> ?uri. <http://dbpedia.org/resource/Mavro> <http://dbpedia.org/ontology/origin> ?uri . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/the_Xynisteri_and_Mavro> <https://dbpedia.org/ontology/origin> ?uri",
        "dist": 80
    },
    {
        "_id": "1744",
        "intermediary_question": "What is the <honors> of the <military people> whose <conflict> is <Battle of France>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_France> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/conflict> <https://dbpedia.org/resource/Battle_of_France> . ?x <https://dbpedia.org/ontology/honors> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 55
    },
    {
        "_id": "1084",
        "intermediary_question": "What is the <restingplace> of <Charles Edward Magoon> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_Edward_Magoon> <http://dbpedia.org/property/restingplace> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Charles_Edward_Magoon> <https://dbpedia.org/ontology/restingplace> ?uri }",
        "dist": 11
    },
    {
        "_id": "926",
        "intermediary_question": "What is the <builder> of the <stadium> whose <tenant> is <2013 Copa Centroamericana> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/2013_Copa_Centroamericana> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/tenant> <https://dbpedia.org/resource/2013_Copa_Centroamericana> . ?x <https://dbpedia.org/ontology/builder> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <",
        "dist": 41
    },
    {
        "_id": "3049",
        "intermediary_question": "Who is the <siler medalist> of <Gymnastics at the 2008 Summer Olympics  Women's artistic individual all-around> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gymnastics_at_the_2008_Summer_Olympics_\u2013_Women's_artistic_individual_all-around> <http://dbpedia.org/ontology/silverMedalist> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Gymnastics_at_the_2008_Summer_Olympics__Women's_artistic_individual_all-around> <https://dbpedia.org/ontology/siler_medalist> ?uri }",
        "dist": 8
    },
    {
        "_id": "1117",
        "intermediary_question": "What are the <given names> whose <gender> is <Female>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/gender> <http://dbpedia.org/resource/Female> } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/gender> <https://dbpedia.org/resource/Female> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 65
    },
    {
        "_id": "642",
        "intermediary_question": "What is the <parent> of the <automobile> whose <products> is <Edsel Ranger> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Edsel_Ranger> . ?x <http://dbpedia.org/property/parent> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/products> <https://dbpedia.org/resource/Edsel_Ranger> . ?x <https://dbpedia.org/ontology/parent> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <",
        "dist": 70
    },
    {
        "_id": "4767",
        "intermediary_question": "What is the total number of other <board> of the <people> whose <board> is <Creative Commons>?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Creative_Commons> . ?x <http://dbpedia.org/ontology/board> ?uri }",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?x <https://dbpedia.org/ontology/board> <https://dbpedia.org/resource/Creative_Commons> . ?x <https://dbpedia.org/ontology/board> ?uri }",
        "dist": 7
    },
    {
        "_id": "501",
        "intermediary_question": "Who is the <leader> of <United States House of Representatives elections, 1788 and 1789> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789> <http://dbpedia.org/property/leader> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789> <https://dbpedia.org/ontology/leader> ?uri }",
        "dist": 11
    },
    {
        "_id": "4066",
        "intermediary_question": "Who is the <writer> of the <The Fugitive Kind> and <written by> of the <The Notebook of Trigorin>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Fugitive_Kind> <http://dbpedia.org/property/writer> ?uri. <http://dbpedia.org/resource/The_Notebook_of_Trigorin> <http://dbpedia.org/ontology/author> ?uri . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/The_Fugitive_Kind> <https://dbpedia.org/resource/of> . ?uri <http://dbpedia.org/property/The_Notebook_of_Trigorin> <https://dbpedia.org/resource/E> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <",
        "dist": 99
    },
    {
        "_id": "333",
        "intermediary_question": "What is the <mountain> whose <mountain range> is <Sierra Nevada (U.S.)> and <parent mountain peak> is <Nevado de Toluca>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)> . ?uri <http://dbpedia.org/ontology/parentMountainPeak> <http://dbpedia.org/resource/Nevado_de_Toluca>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/mountain_range> <https://dbpedia.org/resource/Sierra_Nevada_(U.S.)> . ?uri <https://dbpedia.org/ontology/parent_mountain_peak> <https://dbpedia.org/resource/Nevado_de_Toluca> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 53
    },
    {
        "_id": "4684",
        "intermediary_question": "What is the <PLACE OF DEATH> of the <architect> who is the <designer> of <Monument to Salavat Yulaev> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Monument_to_Salavat_Yulaev> <http://dbpedia.org/ontology/designer> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Monument_to_Salavat_Yulaev> <https://dbpedia.org/ontology/designer> ?x . ?x <https://dbpedia.org/ontology/PLACE_OF_DEATH> ?uri . }",
        "dist": 23
    },
    {
        "_id": "486",
        "intermediary_question": "How many <mammals> are there whose <phylum> is <Chordate>?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/phylum> <http://dbpedia.org/resource/Chordate>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?uri <https://dbpedia.org/ontology/phylum> <https://dbpedia.org/resource/Chordate> . }",
        "dist": 105
    },
    {
        "_id": "1962",
        "intermediary_question": "What is the <battles> of <Roh Tae-woo> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Roh_Tae-woo> <http://dbpedia.org/property/battles> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Roh_Tae-woo> <https://dbpedia.org/ontology/battles> ?uri }",
        "dist": 11
    },
    {
        "_id": "393",
        "intermediary_question": "What is the <subject> of the <books> whose <publisher> is <Random House>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Random_House> . ?x <http://dbpedia.org/property/subject> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/publisher> <https://dbpedia.org/resource/Random_House> . ?x <https://dbpedia.org/ontology/subject> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 55
    },
    {
        "_id": "4842",
        "intermediary_question": "What is the <founders> of the <Pittsburgh> and <appointer> of the <William Cushing>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pittsburgh> <http://dbpedia.org/ontology/founder> ?uri. <http://dbpedia.org/resource/William_Cushing> <http://dbpedia.org/ontology/appointer> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Pittsburgh> <https://dbpedia.org/ontology/founders> ?uri . <https://dbpedia.org/resource/William_Cushing?> <https://dbpedia.org/ontology/appointer> ?uri }",
        "dist": 10
    },
    {
        "_id": "4866",
        "intermediary_question": "What are the <newspapers> whose <owners>'s <key person> is <Rolv  Erik  Ryssdal>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Rolv_Erik_Ryssdal> . ?uri <http://dbpedia.org/property/owners> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/key_person> <https://dbpedia.org/resource/Rolv__Erik__Ryssdal> . ?uri <https://dbpedia.org/ontology/owners> ?x",
        "dist": 113
    },
    {
        "_id": "1755",
        "intermediary_question": "What is the <series> of the <The Lost Special> and <characters> of the <Sherlock Holmes (play)>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Lost_Special> <http://dbpedia.org/property/series> ?uri. <http://dbpedia.org/resource/Sherlock_Holmes_(play)> <http://dbpedia.org/property/characters> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/The_Lost_Special> <https://dbpedia.org/ontology/series> ?uri . <https://dbpedia.org/resource/Sherlock_Holmes_(play)?> <https://dbpedia.org/ontology/characters> ?uri }",
        "dist": 23
    },
    {
        "_id": "2515",
        "intermediary_question": "What is the <known for> of the <models> whose <place of birth> is <Louisiana>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Louisiana> . ?x <http://dbpedia.org/property/knownFor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/place_of_birth> <https://dbpedia.org/resource/Louisiana> . ?x <https://dbpedia.org/ontology/known_for> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 62
    },
    {
        "_id": "3585",
        "intermediary_question": "What is the <official language> of the <Ladonia (micronation)> and <Empire of Atlantium>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ladonia_(micronation)> <http://dbpedia.org/ontology/officialLanguage> ?uri. <http://dbpedia.org/resource/Empire_of_Atlantium> <http://dbpedia.org/ontology/officialLanguage> ?uri . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/the_Ladonia_(micronation)_and_Empire_of_Atlantium> <https://dbpedia.org/ontology/official_language> ?uri",
        "dist": 93
    },
    {
        "_id": "4315",
        "intermediary_question": "What is the <prize awarded> of the <person> who is the <animator> of <The Skeleton Dance> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/The_Skeleton_Dance> <https://dbpedia.org/ontology/animator> ?x . ?x <https://dbpedia.org/ontology/prize_awarded> ?uri . }",
        "dist": 12
    },
    {
        "_id": "4966",
        "intermediary_question": "What is the <office holder> whose <constituency> is <Haight-Ashbury> and <military unit> is <USS Kittiwake (ASR-13)>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Haight-Ashbury> . ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/constituency> <https://dbpedia.org/resource/Haight-Ashbury> . ?uri <https://dbpedia.org/ontology/military_unit> <https://dbpedia.org/resource/USS_Kittiwake_(ASR-13)> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 60
    },
    {
        "_id": "2099",
        "intermediary_question": "What is the <region> of the <ethnic group> which is the <language> of <Arkansas> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arkansas> <http://dbpedia.org/ontology/language> ?x . ?x <http://dbpedia.org/property/region> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Arkansas> <http://dbpedia.org/property/language> ?x . ?x <https://dbpedia.org/ontology/region> ?uri . }",
        "dist": 111
    },
    {
        "_id": "3599",
        "intermediary_question": "What is the <religion> of the <member of parliament> whose <relation> is <Sarathchandra Rajakaruna> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Sarathchandra_Rajakaruna> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/relation> <https://dbpedia.org/resource/Sarathchandra_Rajakaruna> . ?x <https://dbpedia.org/ontology/religion> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <",
        "dist": 52
    },
    {
        "_id": "4121",
        "intermediary_question": "What is the <tenant> of <New Sanno Hotel> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/ontology/tenant> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/New_Sanno_Hotel> <https://dbpedia.org/ontology/tenant> ?uri }",
        "dist": 4
    },
    {
        "_id": "29",
        "intermediary_question": "What is the <name> of the <200001 Aston Villa F.C. season> and <manager> of the <200910 Middlesbrough F.C. season>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2000\u201301_Aston_Villa_F.C._season> <http://dbpedia.org/property/name> ?uri. <http://dbpedia.org/resource/2009\u201310_Middlesbrough_F.C._season> <http://dbpedia.org/ontology/manager> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/200001_Aston_Villa_F.C._season> <https://dbpedia.org/ontology/name> ?uri . <https://dbpedia.org/resource/200910_Middlesbrough_F.C._season?> <https://dbpedia.org/ontology/manager> ?uri }",
        "dist": 18
    },
    {
        "_id": "65",
        "intermediary_question": "Is <Galileo Galilei> the <discoverer> of <Ganymede (moon)>?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ganymede_(moon)> <http://dbpedia.org/property/discoverer> <http://dbpedia.org/resource/Galileo_Galilei> }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/discoverer> <https://dbpedia.org/ontology/Galileo_Galilei> ?uri",
        "dist": 71
    },
    {
        "_id": "838",
        "intermediary_question": "What is the <Formula One racer> whose <relatives> is <Ralf Schumacher> and <has child> is <Mick Schumacher>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ralf_Schumacher> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mick_Schumacher>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FormulaOneRacer>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/relatives> <https://dbpedia.org/resource/Ralf_Schumacher> . ?uri <https://dbpedia.org/ontology/has_child> <https://dbpedia.org/resource/Mick_Schumacher> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 65
    },
    {
        "_id": "3906",
        "intermediary_question": "Is <Front-engine design> the <automobile platform> of <Toyota Verossa>?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Toyota_Verossa> <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/Front-engine_design>  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/automobile_platform> <https://dbpedia.org/ontology/Front-engine_design> ?uri",
        "dist": 72
    },
    {
        "_id": "3773",
        "intermediary_question": "What is the <products> of the <banks> whose <product> is <Postbanken>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Postbanken> . ?x <http://dbpedia.org/property/products> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/product> <https://dbpedia.org/resource/Postbanken> . ?x <https://dbpedia.org/ontology/products> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 48
    },
    {
        "_id": "4635",
        "intermediary_question": "What is the <employment> of the <Irving Chernev> and <Karen Grigorian>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Irving_Chernev> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Karen_Grigorian> <http://dbpedia.org/ontology/occupation> ?uri . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/the_Irving_Chernev_and_Karen_Grigorian> <https://dbpedia.org/ontology/employment> ?uri",
        "dist": 95
    },
    {
        "_id": "3161",
        "intermediary_question": "What is the <producer (of product)> of the <trains> whose <operator> is <MTR>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/MTR> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Train>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/operator> <https://dbpedia.org/resource/MTR> . ?x <https://dbpedia.org/ontology/producer_(of_product)> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 60
    },
    {
        "_id": "2659",
        "intermediary_question": "What is the <television show> whose <distributor> is <Broadcast syndication> and <theme music composer> is <Primus (band)>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/distributor> <https://dbpedia.org/resource/Broadcast_syndication> . ?uri <https://dbpedia.org/ontology/theme_music_composer> <https://dbpedia.org/resource/Primus_(band)> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 64
    },
    {
        "_id": "4615",
        "intermediary_question": "What is the <nationality> of the <writers> whose <movement> is <Feminism>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/movement> <http://dbpedia.org/resource/Feminism> . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/movement> <https://dbpedia.org/resource/Feminism> . ?x <https://dbpedia.org/ontology/nationality> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 43
    },
    {
        "_id": "4628",
        "intermediary_question": "What is the <former team> of the <ice hockey players> whose <position> is <Defenceman>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/position> <https://dbpedia.org/resource/Defenceman> . ?x <https://dbpedia.org/ontology/former_team> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 63
    },
    {
        "_id": "2451",
        "intermediary_question": "What is the <band member> of the <Bands> whose <current members> is <Hynief>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Hynief> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/current_members> <https://dbpedia.org/resource/Hynief> . ?x <https://dbpedia.org/ontology/band_member> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 52
    },
    {
        "_id": "2846",
        "intermediary_question": "What is the <route end> of the <Mumbai Vadodara Expressway> and <line> of the <Vadodara Junction railway station>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mumbai_Vadodara_Expressway> <http://dbpedia.org/ontology/routeEnd> ?uri. <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/property/line> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/the_Vadodara_Junction_railway_station> <https://dbpedia.org/ontology/and> ?x . ?x <https://dbpedia.org/ontology/route_end> ?uri . }",
        "dist": 111
    },
    {
        "_id": "1144",
        "intermediary_question": "What is the <author> of the <owls> whose <magazine> is <Jump Square>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/magazine> <http://dbpedia.org/resource/Jump_Square> . ?x <http://dbpedia.org/property/author> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/magazine> <https://dbpedia.org/resource/Jump_Square> . ?x <https://dbpedia.org/ontology/author> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 68
    },
    {
        "_id": "3078",
        "intermediary_question": "Give me a count of <television shows> whose <network> is <BBC HD>?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD>  . }",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?uri <https://dbpedia.org/ontology/network> <https://dbpedia.org/resource/BBC_HD> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>",
        "dist": 60
    },
    {
        "_id": "1103",
        "intermediary_question": "What is the <area> of the <The Chess Monthly> and <work> of the <Craig Van Tilbury>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Chess_Monthly> <http://dbpedia.org/property/discipline> ?uri. <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/The_Chess_Monthly> <https://dbpedia.org/ontology/area> ?uri . <https://dbpedia.org/resource/the_Craig_Van_Tilbury> <https://dbpedia.org/ontology/work> ?uri }",
        "dist": 39
    },
    {
        "_id": "168",
        "intermediary_question": "What is the <location> of the <religious> who is the <successor> of <Thongsuk Samdaengpan> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thongsuk_Samdaengpan> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Thongsuk_Samdaengpan> <https://dbpedia.org/ontology/successor> ?x . ?x <https://dbpedia.org/ontology/location> ?uri . }",
        "dist": 11
    },
    {
        "_id": "1670",
        "intermediary_question": "What is the <location city> of the <Denver Broncos> and <place of birth> of the <William C. Cramer>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Denver_Broncos> <http://dbpedia.org/ontology/locationCity> ?uri. <http://dbpedia.org/resource/William_C._Cramer> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/location_city> <https://dbpedia.org/resource/place_of> . ?x <https://dbpedia.org/ontology/location_city> ?uri . }",
        "dist": 93
    },
    {
        "_id": "2570",
        "intermediary_question": "Is <Mark Twain> the <characters> of <Mark Twain Tonight>?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mark_Twain_Tonight> <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Mark_Twain> }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/characters> <https://dbpedia.org/ontology/Mark_Twain> ?uri",
        "dist": 73
    },
    {
        "_id": "2377",
        "intermediary_question": "What are the <bacterias> whose <order (taxonomy)> is <Bacillales> and <domain> is <Bacteria>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Bacillales> . ?uri <http://dbpedia.org/property/domain> <http://dbpedia.org/resource/Bacteria>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/order_(taxonomy)> <https://dbpedia.org/resource/Bacillales> . ?uri <http://dbpedia.org/property/domain> <https://dbpedia.org/resource/Bacteria> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 57
    },
    {
        "_id": "4395",
        "intermediary_question": "What is the <place> of the <Geography Club (play)> and <official residence> of the <Scott Berkun>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Geography_Club_(play)> <http://dbpedia.org/property/place> ?uri. <http://dbpedia.org/resource/Scott_Berkun> <http://dbpedia.org/property/residence> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Geography_Club_(play)> <https://dbpedia.org/ontology/place> ?uri . <https://dbpedia.org/resource/Scott_Berkun?> <https://dbpedia.org/ontology/official_residence> ?uri }",
        "dist": 32
    },
    {
        "_id": "4257",
        "intermediary_question": "What are the <fictional characters> whose <series>'s <executive producer> is <Ricky Gervais>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Ricky_Gervais> . ?uri <http://dbpedia.org/ontology/series> ?x  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/executive_producer> <https://dbpedia.org/resource/Ricky_Gervais> . ?uri <https://dbpedia.org/ontology/series> ?x",
        "dist": 10
    },
    {
        "_id": "3862",
        "intermediary_question": "Is <The Next Step (James Brown album)> the <Album> of <Killing Is Out, School Is In>?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In> <http://dbpedia.org/property/album> <http://dbpedia.org/resource/The_Next_Step_(James_Brown_album)> }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Album> <https://dbpedia.org/ontology/The_Next_Step_(James_Brown_album)> ?uri",
        "dist": 84
    },
    {
        "_id": "23",
        "intermediary_question": "What is the <Band> whose <former band member> is <Kevin Jonas> and <past members> is <Joe Jonas>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Kevin_Jonas> . ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Joe_Jonas>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/former_band_member> <https://dbpedia.org/resource/Kevin_Jonas> . ?uri <https://dbpedia.org/ontology/past_members> <https://dbpedia.org/resource/Joe_Jonas> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 56
    },
    {
        "_id": "2633",
        "intermediary_question": "How many <owls> are there whose <youthclubs>'s <team manager> is <Luis Enrique (footballer)> ?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/Luis_Enrique_(footballer)> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?x <http://dbpedia.org/property/team_manager> <https://dbpedia.org/resource/Luis_Enrique_(footballer)> . ?uri <https://dbpedia.org/ontology/youthclubs> ?x dot",
        "dist": 21
    },
    {
        "_id": "3340",
        "intermediary_question": "Is <Chordate> the <phylum> of <Camel>?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Camel> <http://dbpedia.org/property/phylum> <http://dbpedia.org/resource/Chordate> }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/phylum> <https://dbpedia.org/ontology/Chordate> ?uri",
        "dist": 61
    },
    {
        "_id": "2215",
        "intermediary_question": "What is the <purpose> of the <Maharashtra Chess Association> and <kind of music> of the <PyChess>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maharashtra_Chess_Association> <http://dbpedia.org/property/purpose> ?uri. <http://dbpedia.org/resource/PyChess> <http://dbpedia.org/ontology/genre> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Maharashtra_Chess_Association> <https://dbpedia.org/ontology/purpose> ?uri . <https://dbpedia.org/resource/PyChess?> <https://dbpedia.org/ontology/kind_of_music> ?uri }",
        "dist": 28
    },
    {
        "_id": "3682",
        "intermediary_question": "What are the <american football players> whose <former teams> are <Indianapolis Colts> and <Carolina Panthers>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Indianapolis_Colts> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Carolina_Panthers> . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/former_teams> <https://dbpedia.org/resource/Indianapolis_Colts_and_Carolina_Panthers> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 85
    },
    {
        "_id": "4724",
        "intermediary_question": "What is the <language> of <All I Need Is Your Sweet Lovin'> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/All_I_Need_Is_Your_Sweet_Lovin'> <http://dbpedia.org/property/language> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/All_I_Need_Is_Your_Sweet_Lovin'> <https://dbpedia.org/ontology/language> ?uri }",
        "dist": 11
    },
    {
        "_id": "1907",
        "intermediary_question": "What is the <office holder> whose <rank> is <Colonel (United States)> and <consort> is <Dolley Madison>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Dolley_Madison>  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/rank> <https://dbpedia.org/resource/Colonel_(United_States)> . ?uri <https://dbpedia.org/ontology/consort> <https://dbpedia.org/resource/Dolley_Madison> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 78
    },
    {
        "_id": "84",
        "intermediary_question": "What is the <title> of the <Zaman Shah Durrani> and <nationality> of the <Salahuddin Rabbani>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Zaman_Shah_Durrani> <http://dbpedia.org/property/title> ?uri. <http://dbpedia.org/resource/Salahuddin_Rabbani> <http://dbpedia.org/ontology/nationality> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Zaman_Shah_Durrani> <https://dbpedia.org/ontology/title> ?uri . <https://dbpedia.org/resource/Salahuddin_Rabbani?> <https://dbpedia.org/ontology/nationality> ?uri }",
        "dist": 16
    },
    {
        "_id": "227",
        "intermediary_question": "Is <Cibao International Airport> the <hub airport> of <Merlin Express>?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Merlin_Express> <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Cibao_International_Airport> }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/hub_airport> <https://dbpedia.org/ontology/Cibao_International_Airport> ?uri",
        "dist": 71
    },
    {
        "_id": "296",
        "intermediary_question": "Is <Gibson Les Paul> the <notable instruments> of <Duane Allman>?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Duane_Allman> <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_Les_Paul> }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/notable_instruments> <https://dbpedia.org/ontology/Gibson_Les_Paul> ?uri",
        "dist": 70
    },
    {
        "_id": "1001",
        "intermediary_question": "What is the <judges> of the <Rising Star (U.S. TV series)> and <Artist> of the <Brad Paisley discography>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rising_Star_(U.S._TV_series)> <http://dbpedia.org/property/judges> ?uri. <http://dbpedia.org/resource/Brad_Paisley_discography> <http://dbpedia.org/property/artist> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/judges> <https://dbpedia.org/resource/and> . ?uri <https://dbpedia.org/ontology/judges> dot",
        "dist": 109
    },
    {
        "_id": "2138",
        "intermediary_question": "Who are the <people> whose <denomination>'s <headquarters> is <Gold Base>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Gold_Base> . ?uri <http://dbpedia.org/ontology/religion> ?x  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <https://dbpedia.org/resource/Gold_Base> . ?uri <https://dbpedia.org/ontology/denomination> ?x",
        "dist": 14
    },
    {
        "_id": "711",
        "intermediary_question": "What is the <member of political party> of the <Iqbal Singh (politician)> and <B. Shiva Rao>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Iqbal_Singh_(politician)> <http://dbpedia.org/property/party> ?uri. <http://dbpedia.org/resource/B._Shiva_Rao> <http://dbpedia.org/property/party> ?uri . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/Singh_(politician)_and_B._Shiva_Rao> <https://dbpedia.org/resource/C>",
        "dist": 111
    },
    {
        "_id": "2801",
        "intermediary_question": "What is the <state> of the <school> which is the <alma mater> of <Ben Ysursa> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ben_Ysursa> <http://dbpedia.org/property/almaMater> ?x . ?x <http://dbpedia.org/ontology/state> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Ben_Ysursa> <http://dbpedia.org/property/alma_mater> ?x . ?x <https://dbpedia.org/ontology/state> ?uri . }",
        "dist": 5
    },
    {
        "_id": "2527",
        "intermediary_question": "What is the <sport> of the <Lagos Preparatory School> and <profession> of the <William Garne>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lagos_Preparatory_School> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/William_Garne> <http://dbpedia.org/ontology/occupation> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Lagos_Preparatory_School> <https://dbpedia.org/ontology/sport> ?uri . <https://dbpedia.org/resource/William_Garne?> <https://dbpedia.org/ontology/profession> ?uri }",
        "dist": 16
    },
    {
        "_id": "3752",
        "intermediary_question": "What are the <beverages> whose <origin> is <England>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/England> } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/origin> <https://dbpedia.org/resource/England> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 58
    },
    {
        "_id": "3321",
        "intermediary_question": "What is the <current members> of the <Insects vs Robots> and <music composer> of the <Kenny Dies>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Insects_vs_Robots> <http://dbpedia.org/property/currentMembers> ?uri. <http://dbpedia.org/resource/Kenny_Dies> <http://dbpedia.org/ontology/musicComposer> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Insects_vs_Robots> <https://dbpedia.org/ontology/current_members> ?uri . <https://dbpedia.org/resource/Kenny_Dies?> <https://dbpedia.org/ontology/music_composer> ?uri }",
        "dist": 20
    },
    {
        "_id": "3181",
        "intermediary_question": "What are the <television shows> whose <distributed by> is <HBO>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/HBO>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/distributed_by> <https://dbpedia.org/resource/HBO> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 63
    },
    {
        "_id": "4183",
        "intermediary_question": "What is the <distributing label> of <StandBy Records> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/StandBy_Records> <http://dbpedia.org/ontology/distributingLabel> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/StandBy_Records> <https://dbpedia.org/ontology/distributing_label> ?uri }",
        "dist": 6
    },
    {
        "_id": "1615",
        "intermediary_question": "Who is the <film starring> of <On Air with Ryan Seacrest> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/On_Air_with_Ryan_Seacrest> <http://dbpedia.org/ontology/starring> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/On_Air_with_Ryan_Seacrest> <https://dbpedia.org/ontology/film_starring> ?uri }",
        "dist": 9
    },
    {
        "_id": "3024",
        "intermediary_question": "What is the <office holder> whose <childrens> are <James Roosevelt> and <Franklin Delano Roosevelt, Jr.>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/James_Roosevelt> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr.> . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/childrens> <https://dbpedia.org/resource/James_Roosevelt> . ?uri <https://dbpedia.org/ontology/childrens> <https://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr.>",
        "dist": 24
    },
    {
        "_id": "1413",
        "intermediary_question": "Count the <location> of the <waterway tunnels> whose <is owned by> is <Canal & River Trust>.",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Canal_&_River_Trust> . ?x <http://dbpedia.org/ontology/location> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?x <http://dbpedia.org/property/is_owned_by> <https://dbpedia.org/resource/Canal_&_River_Trust> . ?x <https://dbpedia.org/ontology/waterway_tunnels>",
        "dist": 36
    },
    {
        "_id": "763",
        "intermediary_question": "What is the total number of other <launch site> of the <rockets> whose <launch site> is <Cape Canaveral Air Force Station>?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station> . ?x <http://dbpedia.org/ontology/launchSite> ?uri }",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?x <https://dbpedia.org/ontology/launch_site> <https://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station> . ?x <https://dbpedia.org/ontology/launch_site> ?uri }",
        "dist": 11
    },
    {
        "_id": "655",
        "intermediary_question": "What is the <leader name> of the <settlements> whose <time zone> is <Indian Standard Time>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Indian_Standard_Time> . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/time_zone> <https://dbpedia.org/resource/Indian_Standard_Time> . ?x <https://dbpedia.org/ontology/leader_name> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 46
    },
    {
        "_id": "4797",
        "intermediary_question": "Who are the <comics characters> whose <sculptors> is <Bruce Timm>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Bruce_Timm>  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/sculptors> <https://dbpedia.org/resource/Bruce_Timm> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 61
    },
    {
        "_id": "3849",
        "intermediary_question": "What is the <alma mater> of the <Patty Lin> and <university attended> of the <Franklin W. Olin>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Patty_Lin> <http://dbpedia.org/property/almaMater> ?uri. <http://dbpedia.org/resource/Franklin_W._Olin> <http://dbpedia.org/property/education> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/and_university> <https://dbpedia.org/resource/of> . ?x <http://dbpedia.org/property/alma_mater> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <https://dbpedia.org/ontology/the> }",
        "dist": 122
    },
    {
        "_id": "4153",
        "intermediary_question": "What is the <associate> of the <Thomas Bryan Martin> and <is founded by> of the <Pittsburgh>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Bryan_Martin> <http://dbpedia.org/ontology/associate> ?uri. <http://dbpedia.org/resource/Pittsburgh> <http://dbpedia.org/ontology/founder> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Thomas_Bryan_Martin> <https://dbpedia.org/ontology/associate> ?uri . <https://dbpedia.org/resource/Pittsburgh?> <https://dbpedia.org/ontology/is_founded_by> ?uri }",
        "dist": 16
    },
    {
        "_id": "468",
        "intermediary_question": "What is the <licensee> of <WXXV-DT2> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WXXV-DT2> <http://dbpedia.org/property/licensee> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/WXXV-DT2> <https://dbpedia.org/ontology/licensee> ?uri }",
        "dist": 11
    },
    {
        "_id": "157",
        "intermediary_question": "Count the other <sport> of the <schools> whose <sport> is <Hockey>.",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Hockey> . ?x <http://dbpedia.org/ontology/sport> ?uri }",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?x <http://dbpedia.org/property/sport> <https://dbpedia.org/resource/Hockey> . ?x <http://dbpedia.org/property/sport> ?uri }",
        "dist": 19
    },
    {
        "_id": "1295",
        "intermediary_question": "List the other <tomb> of the <royalties> whose <burial place> is <Little Easton>.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Little_Easton> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/tomb> <https://dbpedia.org/resource/burial_place> . ?x <https://dbpedia.org/ontology/tomb> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 94
    },
    {
        "_id": "497",
        "intermediary_question": "What is the <relation> of the <military people> whose <in conflict> is <Operation Barbarossa>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Operation_Barbarossa> . ?x <http://dbpedia.org/ontology/relation> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/in_conflict> <https://dbpedia.org/resource/Operation_Barbarossa> . ?x <https://dbpedia.org/ontology/relation> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 53
    },
    {
        "_id": "4740",
        "intermediary_question": "What is the total number of <awards> of the <artists> whose <career> is <Screenwriter> ?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Screenwriter> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?x <https://dbpedia.org/ontology/career> <https://dbpedia.org/resource/Screenwriter> . ?x <https://dbpedia.org/ontology/awards> ?uri . }",
        "dist": 29
    },
    {
        "_id": "2940",
        "intermediary_question": "What is the <builder> of <Estadio Nacional de Costa Rica (2011)> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)> <http://dbpedia.org/ontology/builder> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)> <https://dbpedia.org/ontology/builder> ?uri }",
        "dist": 4
    },
    {
        "_id": "3456",
        "intermediary_question": "How many <software> are there whose <operating system> is <Microsoft Windows>?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?uri <https://dbpedia.org/ontology/operating_system> <https://dbpedia.org/resource/Microsoft_Windows> . }",
        "dist": 102
    },
    {
        "_id": "373",
        "intermediary_question": "What is the <honours> of the <race horse> which is the <grandsire> of <Counterpoint (horse)> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Counterpoint_(horse)> <http://dbpedia.org/property/grandsire> ?x . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Counterpoint_(horse)> <http://dbpedia.org/property/grandsire> ?x . ?x <https://dbpedia.org/ontology/honours> ?uri . }",
        "dist": 91
    },
    {
        "_id": "79",
        "intermediary_question": "What is the <location> of <Swedish Covenant Hospital> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Swedish_Covenant_Hospital> <http://dbpedia.org/ontology/location> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Swedish_Covenant_Hospital> <https://dbpedia.org/ontology/location> ?uri }",
        "dist": 4
    },
    {
        "_id": "1553",
        "intermediary_question": "Who is the <scientist> whose <prizes> is <Norbert Wiener Award for Social and Professional Responsibility>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility>  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/prizes> <https://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility> }",
        "dist": 5
    },
    {
        "_id": "1669",
        "intermediary_question": "What is the <awards> of the <artists> whose <work> is <Screenwriter>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Screenwriter> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/work> <https://dbpedia.org/resource/Screenwriter> . ?x <https://dbpedia.org/ontology/awards> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 77
    },
    {
        "_id": "2131",
        "intermediary_question": "What is the <office> of the <mayors> whose <POD> is <U.S. Route 165>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/U.S._Route_165> . ?x <http://dbpedia.org/property/office> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/POD> <https://dbpedia.org/resource/U.S._Route_165> . ?x <https://dbpedia.org/ontology/office> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 66
    },
    {
        "_id": "4439",
        "intermediary_question": "What is the <race> of the <race horses> whose <owner> is <Tillingdale>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Tillingdale> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/owner> <https://dbpedia.org/resource/Tillingdale> . ?x <https://dbpedia.org/ontology/race> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 56
    },
    {
        "_id": "465",
        "intermediary_question": "What is the <television show> whose <related>'s <subsequent work> is <Doctor Who Extra>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Doctor_Who_Extra> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/subsequent_work> <https://dbpedia.org/resource/Doctor_Who_Extra> . ?uri <https://dbpedia.org/ontology/related> ?x",
        "dist": 109
    },
    {
        "_id": "248",
        "intermediary_question": "What is the <predecessor> of the <automobile> which is the <related> of <Cadillac Fleetwood> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cadillac_Fleetwood> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Cadillac_Fleetwood> <http://dbpedia.org/property/related> ?x . ?x <https://dbpedia.org/ontology/predecessor> ?uri . }",
        "dist": 96
    },
    {
        "_id": "931",
        "intermediary_question": "What is the <country> whose <largest city> is <Lima>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Lima> } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/largest_city> <https://dbpedia.org/resource/Lima> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 60
    },
    {
        "_id": "1335",
        "intermediary_question": "Whose <opponents> are <Ike Clanton> and <Billy Clanton>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Ike_Clanton> . ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Billy_Clanton> . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/opponents> <https://dbpedia.org/resource/Ike_Clanton>",
        "dist": 99
    },
    {
        "_id": "4524",
        "intermediary_question": "What is the <institution> of <Robert Hall (economist)> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Hall_(economist)> <http://dbpedia.org/ontology/institution> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Robert_Hall_(economist)> <https://dbpedia.org/ontology/institution> ?uri }",
        "dist": 4
    },
    {
        "_id": "1338",
        "intermediary_question": "What is the <denomination> of the <president> who is the <commander> of <South Thailand insurgency> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Thailand_insurgency> <http://dbpedia.org/ontology/commander> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/South_Thailand_insurgency> <https://dbpedia.org/ontology/commander> ?x . ?x <https://dbpedia.org/ontology/denomination> ?uri . }",
        "dist": 11
    },
    {
        "_id": "1406",
        "intermediary_question": "What <writer>'s <notableworks> is <Maniac Magee>",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Maniac_Magee>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/notableworks> <",
        "dist": 146
    },
    {
        "_id": "1090",
        "intermediary_question": "What is the <nationality> of <Emmett Hughes> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Emmett_Hughes> <http://dbpedia.org/ontology/nationality> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Emmett_Hughes> <https://dbpedia.org/ontology/nationality> ?uri }",
        "dist": 5
    },
    {
        "_id": "4209",
        "intermediary_question": "What are the <movies> whose <music> is <Laurie Johnson>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Laurie_Johnson>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/music> <https://dbpedia.org/resource/Laurie_Johnson> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 48
    },
    {
        "_id": "742",
        "intermediary_question": "What is the <information appliance> whose <maker> is <Sony> and <predecessor> is <PlayStation 2>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/PlayStation_2>  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/maker> <https://dbpedia.org/resource/Sony> . ?uri <https://dbpedia.org/ontology/predecessor> <https://dbpedia.org/resource/PlayStation_2> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 66
    },
    {
        "_id": "2323",
        "intermediary_question": "List the <related> of the <automobiles> whose <class> is <Luxury vehicle>.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/class> <http://dbpedia.org/resource/Luxury_vehicle> . ?x <http://dbpedia.org/property/related> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/class> <https://dbpedia.org/resource/Luxury_vehicle> . ?x <https://dbpedia.org/ontology/related> ?uri . ?x",
        "dist": 110
    },
    {
        "_id": "3601",
        "intermediary_question": "What is the <television show> whose <judges> is <Harry Connick, Jr.>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Harry_Connick,_Jr.>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/judges> <https://dbpedia.org/resource/Harry_Connick,_Jr.> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 58
    },
    {
        "_id": "2123",
        "intermediary_question": "Is <Paul Weatherwax> the <edited by> of <Behave Yourself!>?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Behave_Yourself!> <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Paul_Weatherwax> }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/edited_by> <https://dbpedia.org/ontology/Paul_Weatherwax> ?uri",
        "dist": 77
    },
    {
        "_id": "2094",
        "intermediary_question": "Is <Creative Commons license> the <content license> of <Journal of Cancer>?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Journal_of_Cancer> <http://dbpedia.org/property/license> <http://dbpedia.org/resource/Creative_Commons_license> }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/content_license> <https://dbpedia.org/ontology/Creative_Commons_license> ?uri",
        "dist": 75
    },
    {
        "_id": "240",
        "intermediary_question": "What is the <kind of music> of the <video games> whose <developed by> is <Blizzard Entertainment>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Blizzard_Entertainment> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/developed_by> <https://dbpedia.org/resource/Blizzard_Entertainment> . ?x <https://dbpedia.org/ontology/kind_of_music> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 69
    },
    {
        "_id": "2351",
        "intermediary_question": "What is the <series> of <Doctor Who: Evacuation Earth> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Doctor_Who:_Evacuation_Earth> <http://dbpedia.org/ontology/series> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Doctor_Who:_Evacuation_Earth> <https://dbpedia.org/ontology/series> ?uri }",
        "dist": 4
    },
    {
        "_id": "1370",
        "intermediary_question": "What is the <awards> of the <person> who is the <writer> of <Face to Face (1976 film)> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Face_to_Face_(1976_film)> <http://dbpedia.org/property/writer> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Face_to_Face_(1976_film)> <https://dbpedia.org/ontology/writer> ?x . ?x <https://dbpedia.org/ontology/awards> ?uri . }",
        "dist": 18
    },
    {
        "_id": "1057",
        "intermediary_question": "What is the <other party> of the <Chandra Shekhar> and <political party> of the <Govinda (actor)>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chandra_Shekhar> <http://dbpedia.org/ontology/otherParty> ?uri. <http://dbpedia.org/resource/Govinda_(actor)> <http://dbpedia.org/ontology/party> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/and_political> <https://dbpedia.org/resource/of_the_Govinda_(actor)> . ?x <https://dbpedia.org/ontology/other_party> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 113
    },
    {
        "_id": "4816",
        "intermediary_question": "What is the <awards> of the <owl> which is the <screenplay> of <The Motorcycle Diaries (film)> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Motorcycle_Diaries_(film)> <http://dbpedia.org/property/screenplay> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/The_Motorcycle_Diaries_(film)> <http://dbpedia.org/property/screenplay> ?x . ?x <https://dbpedia.org/ontology/awards> ?uri . }",
        "dist": 10
    },
    {
        "_id": "199",
        "intermediary_question": "Is <United States Senate> the <nominee> of <Jack Ryan (politician)>?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> <http://dbpedia.org/resource/United_States_Senate> }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/nominee> <https://dbpedia.org/ontology/United_States_Senate> ?uri",
        "dist": 77
    },
    {
        "_id": "2280",
        "intermediary_question": "What is the <band member> of the <Bands> whose <label> is <Entertainment One Music>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Entertainment_One_Music> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/label> <https://dbpedia.org/resource/Entertainment_One_Music> . ?x <https://dbpedia.org/ontology/band_member> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 50
    },
    {
        "_id": "4749",
        "intermediary_question": "What is the <former team> of the <Dan Daoust> and <played for> of the <Don Ashby>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dan_Daoust> <http://dbpedia.org/ontology/formerTeam> ?uri. <http://dbpedia.org/resource/Don_Ashby> <http://dbpedia.org/property/playedFor> ?uri . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/the_Dan> <https://dbpedia.org/ontology/former_team> ?uri . <https://dbpedia.org/resource/the_Don_Ashby> <https://dbpedia.org/ontology/played_for> ?uri }",
        "dist": 29
    },
    {
        "_id": "2220",
        "intermediary_question": "What is the <area> of <Radio Philippines Network> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Radio_Philippines_Network> <http://dbpedia.org/property/area> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Radio_Philippines_Network> <https://dbpedia.org/ontology/area> ?uri }",
        "dist": 11
    },
    {
        "_id": "4771",
        "intermediary_question": "What is the <district> of the <Fort Heath radar station> and <state> of the <Joseph Story>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fort_Heath_radar_station> <http://dbpedia.org/property/district> ?uri. <http://dbpedia.org/resource/Joseph_Story> <http://dbpedia.org/property/state> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Fort_Heath_radar_station> <https://dbpedia.org/ontology/district> ?uri . <https://dbpedia.org/resource/Joseph_Story?> <https://dbpedia.org/ontology/state> ?uri }",
        "dist": 23
    },
    {
        "_id": "2819",
        "intermediary_question": "What is the <river> whose <river mouth> is <Gulf of Mexico> and <source location> is <Itasca State Park>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Gulf_of_Mexico> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Itasca_State_Park>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/river_mouth> <https://dbpedia.org/resource/Gulf_of_Mexico> . ?uri <https://dbpedia.org/ontology/source_location> <https://dbpedia.org/resource/Itasca_State_Park> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 55
    },
    {
        "_id": "3150",
        "intermediary_question": "Is <Mitch Miller> the <musical band> of <My Truly, Truly Fair>?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/My_Truly,_Truly_Fair> <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/Mitch_Miller> }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/musical_band> <https://dbpedia.org/ontology/Mitch_Miller> ?uri",
        "dist": 78
    },
    {
        "_id": "4256",
        "intermediary_question": "What is the <denomination> of the <schools> whose <region> is <Ashanti Region>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/region> <http://dbpedia.org/resource/Ashanti_Region> . ?x <http://dbpedia.org/property/denomination> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/region> <https://dbpedia.org/resource/Ashanti_Region> . ?x <https://dbpedia.org/ontology/denomination> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 57
    },
    {
        "_id": "3107",
        "intermediary_question": "What is the <office holder> whose <successor>'s <alma mater> is <Instituts d'tudes politiques>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Instituts_d'\u00e9tudes_politiques> . ?uri <http://dbpedia.org/property/successor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/alma_mater> <https://dbpedia.org/resource/Instituts_d'tudes_politiques> . ?uri <https://dbpedia.org/ontology/successor> ?x",
        "dist": 115
    },
    {
        "_id": "1973",
        "intermediary_question": "Give the total number of <mascot> of the <universities> whose <athletics> is <National Collegiate Athletic Association>.",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?x <http://dbpedia.org/property/mascot> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?x <https://dbpedia.org/ontology/athletics> <https://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?x <http://dbpedia.org/property/mascot> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>",
        "dist": 66
    },
    {
        "_id": "1375",
        "intermediary_question": "What is the <region served> of the <Digit-Alb> and <place of birth> of the <Christine Rolfes>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Digit-Alb> <http://dbpedia.org/ontology/regionServed> ?uri. <http://dbpedia.org/resource/Christine_Rolfes> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Digit-Alb> <https://dbpedia.org/ontology/region_served> ?uri . <https://dbpedia.org/resource/Christine_Rolfes?> <https://dbpedia.org/ontology/place_of_birth> ?uri }",
        "dist": 25
    },
    {
        "_id": "3968",
        "intermediary_question": "What is the <nation> of <WTA Tour Championships> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WTA_Tour_Championships> <http://dbpedia.org/property/country> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/WTA_Tour_Championships> <https://dbpedia.org/ontology/nation> ?uri }",
        "dist": 18
    },
    {
        "_id": "4062",
        "intermediary_question": "What is the <television show> whose <theme music composer> is <Julian Gingell> and <channel> is <Fox Broadcasting Company>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell> . ?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/theme_music_composer> <https://dbpedia.org/resource/Julian_Gingell> . ?uri <https://dbpedia.org/ontology/channel> <https://dbpedia.org/resource/Fox_Broadcasting_Company> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 71
    },
    {
        "_id": "4445",
        "intermediary_question": "What is the <prize received> of the <screenwriter> who is the <screenplay> of <The Postman (film)> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Postman_(film)> <http://dbpedia.org/property/screenplay> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/The_Postman_(film)> <https://dbpedia.org/ontology/screenplay> ?x . ?x <https://dbpedia.org/ontology/prize_received> ?uri . }",
        "dist": 23
    },
    {
        "_id": "3557",
        "intermediary_question": "What is the <service> of <Laemmle Theatres> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Laemmle_Theatres> <https://dbpedia.org/ontology/service> ?uri }",
        "dist": 4
    },
    {
        "_id": "964",
        "intermediary_question": "Is <Video game> the <industry> of <Nintendo>?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nintendo> <http://dbpedia.org/property/industry> <http://dbpedia.org/resource/Video_game> }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/industry> <https://dbpedia.org/ontology/Video_game> ?uri",
        "dist": 64
    },
    {
        "_id": "179",
        "intermediary_question": "What is the <office holder> whose <predecessor> is <Henry E. Catto, Jr.> and <award> is <Screen Actors Guild Life Achievement Award>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Henry_E._Catto,_Jr.> . ?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/predecessor> <https://dbpedia.org/resource/Henry_E._Catto,_Jr.> . ?uri <https://dbpedia.org/ontology/award> <https://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 51
    },
    {
        "_id": "3698",
        "intermediary_question": "What is the <notable commanders> of the <Army Group Oberrhein (Germany)> and <leader> of the <Kriminalpolizei>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)> <http://dbpedia.org/property/notableCommanders> ?uri. <http://dbpedia.org/resource/Kriminalpolizei> <http://dbpedia.org/ontology/leader> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/notable_commanders> <https://dbpedia.org/resource/Group_Oberrhein_(Germany)_and> . ?x <http://dbpedia.org/property/notable_commanders> ?uri . }",
        "dist": 122
    },
    {
        "_id": "3821",
        "intermediary_question": "What is the <city> of the <Soccer Bowl '76> and <maintenance> of the <Cheasty Boulevard South>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Soccer_Bowl_'76> <http://dbpedia.org/ontology/city> ?uri. <http://dbpedia.org/resource/Cheasty_Boulevard_South> <http://dbpedia.org/ontology/maintainedBy> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Soccer_Bowl_'76> <https://dbpedia.org/ontology/city> ?uri . <https://dbpedia.org/resource/Cheasty_Boulevard_South?> <https://dbpedia.org/ontology/maintenance> ?uri }",
        "dist": 15
    },
    {
        "_id": "4878",
        "intermediary_question": "What is the <office holder> whose <allegiance> is <Colony of Virginia> and <rank> is <Colonel (United States)>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Colony_of_Virginia> . ?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/allegiance> <https://dbpedia.org/resource/Colony_of_Virginia> . ?uri <https://dbpedia.org/ontology/rank> <https://dbpedia.org/resource/Colonel_(United_States)> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 65
    },
    {
        "_id": "3899",
        "intermediary_question": "Who is the <First Driver> of <1993 European Grand Prix> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1993_European_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/First_Driver_of_<1993_European_Grand_Prix> <",
        "dist": 75
    },
    {
        "_id": "4487",
        "intermediary_question": "What is the <layout> of the <automobiles> whose <related mean of transportation> is <Subaru Outback>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/relatedMeanOfTransportation> <http://dbpedia.org/resource/Subaru_Outback> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/related_mean_of_transportation> <https://dbpedia.org/resource/Subaru_Outback> . ?x <https://dbpedia.org/ontology/layout> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 53
    },
    {
        "_id": "3238",
        "intermediary_question": "What is the <university> whose <superintendent> is <Lieutenant general (United States)> and <mascot> is <Gyrfalcon>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/superintendent> <http://dbpedia.org/resource/Lieutenant_general_(United_States)> . ?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Gyrfalcon>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/superintendent> <https://dbpedia.org/resource/Lieutenant_general_(United_States)> . ?uri <https://dbpedia.org/ontology/mascot> <https://dbpedia.org/resource/Gyrfalcon> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 56
    },
    {
        "_id": "2974",
        "intermediary_question": "How many other <ingredient> are there of the <Foods> whose <ingredient> is <Potato> ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Potato> . ?x <http://dbpedia.org/ontology/ingredient> ?uri }",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?x <https://dbpedia.org/ontology/ingredient> <https://dbpedia.org/resource/Potato> . ?x <https://dbpedia.org/ontology/ingredient> ?uri }",
        "dist": 7
    },
    {
        "_id": "3580",
        "intermediary_question": "What is the <source country> of <ung River> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/\u0110u\u1ed1ng_River> <http://dbpedia.org/ontology/sourceCountry> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/ung_River> <https://dbpedia.org/ontology/source_country> ?uri }",
        "dist": 9
    },
    {
        "_id": "2887",
        "intermediary_question": "How many <producer (of product)> are there, of the <rockets> whose <launch site> is <Vandenberg Air Force Base> ?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Vandenberg_Air_Force_Base> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?x <https://dbpedia.org/ontology/launch_site> <https://dbpedia.org/resource/Vandenberg_Air_Force_Base> . ?x <https://dbpedia.org/ontology/producer_(of_product)> ?uri . }",
        "dist": 111
    },
    {
        "_id": "2575",
        "intermediary_question": "List the <destination> of the <airlines> whose <headquarters> is <Gatwick Airport>.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Gatwick_Airport> . ?x <http://dbpedia.org/ontology/destination> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/headquarters> <https://dbpedia.org/resource/Gatwick_Airport> . ?x <https://dbpedia.org/ontology/destination> ?uri . ?x",
        "dist": 100
    },
    {
        "_id": "1419",
        "intermediary_question": "What are the <given names> whose <gender> is <Male>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Male> } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/gender> <https://dbpedia.org/resource/Male> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 58
    },
    {
        "_id": "3907",
        "intermediary_question": "What is the <official residence> of <Sukhumbhand Paribatra> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sukhumbhand_Paribatra> <http://dbpedia.org/property/residence> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Sukhumbhand_Paribatra> <https://dbpedia.org/ontology/official_residence> ?uri }",
        "dist": 20
    },
    {
        "_id": "4673",
        "intermediary_question": "What are the <television shows> whose <company>'s <predecessor> is <Desilu Productions>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Desilu_Productions> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/predecessor> <https://dbpedia.org/resource/Desilu_Productions> . ?uri <https://dbpedia.org/ontology/company> ?x",
        "dist": 121
    },
    {
        "_id": "4902",
        "intermediary_question": "What is the <operator> of <FedExField> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/FedExField> <http://dbpedia.org/ontology/operator> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/FedExField> <https://dbpedia.org/ontology/operator> ?uri }",
        "dist": 4
    },
    {
        "_id": "1860",
        "intermediary_question": "What is the <battles> of the <Steven Palazzo> and <Tony Hogg>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steven_Palazzo> <http://dbpedia.org/property/battles> ?uri. <http://dbpedia.org/resource/Tony_Hogg> <http://dbpedia.org/property/battles> ?uri . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/the_Steven_Palazzo_and_Tony_Hogg> <https://dbpedia.org/ontology/battles> ?uri",
        "dist": 90
    },
    {
        "_id": "8",
        "intermediary_question": "What is the <parent company> of the <automobile> whose <assembly> is <Broadmeadows, Victoria> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Broadmeadows,_Victoria> . ?x <http://dbpedia.org/ontology/parentCompany> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/assembly> <https://dbpedia.org/resource/Broadmeadows,_Victoria> . ?x <https://dbpedia.org/ontology/parent_company> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <",
        "dist": 53
    },
    {
        "_id": "2894",
        "intermediary_question": "Who is the <starring> of the <Betsy's Wedding> and <actor> of the <Sixteen Candles>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Betsy's_Wedding> <http://dbpedia.org/ontology/starring> ?uri. <http://dbpedia.org/resource/Sixteen_Candles> <http://dbpedia.org/property/starring> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Betsy's_Wedding> <https://dbpedia.org/ontology/starring> ?uri . <https://dbpedia.org/resource/the_Sixteen_Candles> <https://dbpedia.org/ontology/actor> ?uri }",
        "dist": 115
    },
    {
        "_id": "2847",
        "intermediary_question": "How many <information appliances> are there whose <made by> is <Foxconn>?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Foxconn>  . }",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?uri <https://dbpedia.org/ontology/made_by> <https://dbpedia.org/resource/Foxconn> . }",
        "dist": 17
    },
    {
        "_id": "3664",
        "intermediary_question": "Is <Moscow> the <target airport> of <Polet Airlines>?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Polet_Airlines> <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Moscow> }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/target_airport> <https://dbpedia.org/ontology/Moscow> ?uri",
        "dist": 72
    },
    {
        "_id": "144",
        "intermediary_question": "What is the total number of <land> of the <cheese> whose <ingredient> is <Shallot> ?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Shallot> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?x <https://dbpedia.org/ontology/ingredient> <https://dbpedia.org/resource/Shallot> . ?x <https://dbpedia.org/ontology/land> ?uri . }",
        "dist": 105
    },
    {
        "_id": "2104",
        "intermediary_question": "What is the <mascot> of the <military unit> which is the <branch> of <David Prowse (politician)> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Prowse_(politician)> <http://dbpedia.org/property/branch> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/David_Prowse_(politician)> <http://dbpedia.org/property/branch> ?x . ?x <https://dbpedia.org/ontology/mascot> ?uri . }",
        "dist": 10
    },
    {
        "_id": "3143",
        "intermediary_question": "Is <Cohoes, New York> the <route junction> of <New York State Route 470>?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/New_York_State_Route_470> <http://dbpedia.org/ontology/routeJunction> <http://dbpedia.org/resource/Cohoes,_New_York> }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/route_junction> <https://dbpedia.org/ontology/Cohoes,_New_York> ?uri",
        "dist": 81
    },
    {
        "_id": "841",
        "intermediary_question": "How many <notable work> are there of the <writer> who is the <creator> of <Stuart Alan Jones> ?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Stuart_Alan_Jones> <http://dbpedia.org/ontology/creator> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { <https://dbpedia.org/resource/Stuart_Alan_Jones> <http://dbpedia.org/property/creator> ?x . ?x <http://dbpedia.org/property/notable_work> ?uri . }",
        "dist": 21
    },
    {
        "_id": "1128",
        "intermediary_question": "What is the <literary genre> of the <Band> whose <home town> is <County Westmeath> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/County_Westmeath> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/home_town> <https://dbpedia.org/resource/County_Westmeath> . ?x <https://dbpedia.org/ontology/literary_genre> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <",
        "dist": 53
    },
    {
        "_id": "151",
        "intermediary_question": "What is the <sport> of the <universities> whose <city> is <Taguig>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Taguig> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/city> <https://dbpedia.org/resource/Taguig> . ?x <https://dbpedia.org/ontology/sport> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 59
    },
    {
        "_id": "3591",
        "intermediary_question": "What is the <album> of <Haiti I Am Sorry> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Haiti_I_Am_Sorry> <http://dbpedia.org/ontology/album> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Haiti_I_Am_Sorry> <https://dbpedia.org/ontology/album> ?uri }",
        "dist": 4
    },
    {
        "_id": "1052",
        "intermediary_question": "Is <C++> the <programming language> of <Microsoft Office>?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Microsoft_Office> <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++> }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/programming_language> <https://dbpedia.org/ontology/C++> ?uri",
        "dist": 73
    },
    {
        "_id": "1590",
        "intermediary_question": "List the <Bands> whose <current members>'s <notable instruments> is <PRS Guitars>.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/PRS_Guitars> . ?uri <http://dbpedia.org/property/currentMembers> ?x  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/notable_instruments> <https://dbpedia.org/resource/PRS_Guitars> . ?uri <https://dbpedia.org/ontology/current_members",
        "dist": 30
    },
    {
        "_id": "3008",
        "intermediary_question": "What is the <river> whose <source place> is <Gloucestershire> and <river mouth> is <North Sea>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Gloucestershire> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/North_Sea>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/source_place> <https://dbpedia.org/resource/Gloucestershire> . ?uri <https://dbpedia.org/ontology/river_mouth> <https://dbpedia.org/resource/North_Sea> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 48
    },
    {
        "_id": "2029",
        "intermediary_question": "What are the other <commander> of the <military conflicts> whose <commander> is <Roundhead (Wyandot)>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Roundhead_(Wyandot)> . ?x <http://dbpedia.org/ontology/commander> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/other_commander> <https://dbpedia.org/resource/commander> . ?x <https://dbpedia.org/ontology/other_commander> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 87
    },
    {
        "_id": "3418",
        "intermediary_question": "What are the <books> whose <literary genre> is <Short story>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Short_story> } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/literary_genre> <https://dbpedia.org/resource/Short_story> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 60
    },
    {
        "_id": "1807",
        "intermediary_question": "What is the <Nickname> of the <schools> whose <colour> is <Royal blue>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/colour> <http://dbpedia.org/resource/Royal_blue> . ?x <http://dbpedia.org/property/nickname> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/colour> <https://dbpedia.org/resource/Royal_blue> . ?x <https://dbpedia.org/ontology/Nickname> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 51
    },
    {
        "_id": "2696",
        "intermediary_question": "What is the <party> of the <office holders> whose <alma mater> is <Somerville College, Oxford>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Somerville_College,_Oxford> . ?x <http://dbpedia.org/ontology/party> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/alma_mater> <https://dbpedia.org/resource/Somerville_College,_Oxford> . ?x <https://dbpedia.org/ontology/party> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 51
    },
    {
        "_id": "3039",
        "intermediary_question": "What is the <awards> of <Jos Rivera (playwright)> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jos\u00e9_Rivera_(playwright)> <http://dbpedia.org/property/awards> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Jos_Rivera_(playwright)> <https://dbpedia.org/ontology/awards> ?uri }",
        "dist": 12
    },
    {
        "_id": "472",
        "intermediary_question": "Who is the <office holder> whose <prize received> is <Screen Actors Guild Life Achievement Award>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award>  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/prize_received> <https://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award> }",
        "dist": 24
    },
    {
        "_id": "3289",
        "intermediary_question": "What are the <movies> whose <director of photography>'s <place of death> is <United States>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/cinematography> ?x  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/place_of_death> <https://dbpedia.org/resource/United_States> . ?uri <https://dbpedia.org/ontology/director_of_photography> ?x",
        "dist": 47
    },
    {
        "_id": "4074",
        "intermediary_question": "What is the <Home Stadium> of the <Kenya national under-20 football team> and <born in> of the <Martin Suji>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kenya_national_under-20_football_team> <http://dbpedia.org/property/homeStadium> ?uri. <http://dbpedia.org/resource/Martin_Suji> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/under-20_football_team_and> <https://dbpedia.org/resource/in_of> . ?x <https://dbpedia.org/ontology/Home_Stadium> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <https://dbpedia.org/ontology/Kenya>",
        "dist": 130
    },
    {
        "_id": "3496",
        "intermediary_question": "What is the <company> whose <key people> is <Dennis Muilenburg> and <key person> is <Raymond Conner>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Raymond_Conner>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/key_people> <https://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <https://dbpedia.org/ontology/key_person> <https://dbpedia.org/resource/Raymond_Conner> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 57
    },
    {
        "_id": "279",
        "intermediary_question": "What is the <branch> of the <George G. Siebels, Jr.> and <LeRoy Collins>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_G._Siebels,_Jr.> <http://dbpedia.org/property/branch> ?uri. <http://dbpedia.org/resource/LeRoy_Collins> <http://dbpedia.org/property/branch> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/the_George_G._Siebels,_Jr._and_LeRoy_Collins> <https://dbpedia.org/ontology/branch> ?uri",
        "dist": 185
    },
    {
        "_id": "1741",
        "intermediary_question": "What <scientists>'s <citizenship> is <Statelessness>",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/citizenship> <http://dbpedia.org/resource/Statelessness>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/citizenship> <",
        "dist": 143
    },
    {
        "_id": "4624",
        "intermediary_question": "What is the <region served> of <Toll Global Express> ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Toll_Global_Express> <http://dbpedia.org/ontology/regionServed> ?uri } ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Toll_Global_Express> <https://dbpedia.org/ontology/region_served> ?uri }",
        "dist": 6
    },
    {
        "_id": "2886",
        "intermediary_question": "What is the <protected area> whose <nearest city> is <Kenya>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Kenya>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ProtectedArea>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/nearest_city> <https://dbpedia.org/resource/Kenya> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 52
    },
    {
        "_id": "1941",
        "intermediary_question": "How many other <nearest city> are there of the <historic places> whose <nearest city> is <Wisconsin> ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Wisconsin> . ?x <http://dbpedia.org/property/nearestCity> ?uri }",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?x <https://dbpedia.org/ontology/nearest_city> <https://dbpedia.org/resource/Wisconsin> . ?x <https://dbpedia.org/ontology/nearest_city> ?uri }",
        "dist": 18
    },
    {
        "_id": "100",
        "intermediary_question": "Give me the total number of <commander> of the <military conflicts> whose <commander> is <Roundhead (Wyandot)>.",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Roundhead_(Wyandot)> . ?x <http://dbpedia.org/ontology/commander> ?uri }",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?x <http://dbpedia.org/property/commander> <https://dbpedia.org/resource/Roundhead_(Wyandot)> . ?x <http://dbpedia.org/property/commander> ?uri }",
        "dist": 12
    },
    {
        "_id": "2804",
        "intermediary_question": "Give me a count of <countries> whose <leader name> is <Elizabeth II>?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Elizabeth_II>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?uri <https://dbpedia.org/ontology/leader_name> <https://dbpedia.org/resource/Elizabeth_II> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>",
        "dist": 53
    },
    {
        "_id": "3570",
        "intermediary_question": "What are the other <fields> of the <scientists> whose <fields> is <Chinese poetry>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Chinese_poetry> . ?x <http://dbpedia.org/property/fields> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/other_fields> <https://dbpedia.org/resource/fields> . ?x <https://dbpedia.org/ontology/other_fields> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 84
    },
    {
        "_id": "3684",
        "intermediary_question": "What is the <narrated> of the <television show> whose <composer> is <John Douglas (conductor)> ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/John_Douglas_(conductor)> . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/composer> <https://dbpedia.org/resource/John_Douglas_(conductor)> . ?x <https://dbpedia.org/ontology/narrated> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <",
        "dist": 55
    },
    {
        "_id": "3661",
        "intermediary_question": "What is the <parent> of the <Hypnotize Minds> and <label> of the <The Producers (2005 film)>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hypnotize_Minds> <http://dbpedia.org/property/parent> ?uri. <http://dbpedia.org/resource/The_Producers_(2005_film)> <http://dbpedia.org/property/label> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Hypnotize_Minds> <https://dbpedia.org/ontology/parent> ?uri . <https://dbpedia.org/resource/the_The_Producers_(2005_film)> <https://dbpedia.org/ontology/label> ?uri }",
        "dist": 26
    },
    {
        "_id": "530",
        "intermediary_question": "What is the <college> of the <Luke List (golfer)> and <alma mater> of the <K. Terry Dornbush>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Luke_List_(golfer)> <http://dbpedia.org/property/college> ?uri. <http://dbpedia.org/resource/K._Terry_Dornbush> <http://dbpedia.org/property/almaMater> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Luke_List_(golfer)> <https://dbpedia.org/ontology/college> ?uri . <https://dbpedia.org/resource/K._Terry_Dornbush?> <https://dbpedia.org/ontology/alma_mater> ?uri }",
        "dist": 25
    },
    {
        "_id": "1886",
        "intermediary_question": "Who is the <fictional character> whose <portrayer> is <Terminator 2: Judgment Day>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_2:_Judgment_Day>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/portrayer> <https://dbpedia.org/resource/Terminator_2:_Judgment_Day> }",
        "dist": 115
    },
    {
        "_id": "681",
        "intermediary_question": "What is the <debut team> of the <John Estes> and <team> of the <Dan Shamash>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Estes> <http://dbpedia.org/ontology/debutTeam> ?uri. <http://dbpedia.org/resource/Dan_Shamash> <http://dbpedia.org/ontology/team> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/John_Estes> <https://dbpedia.org/ontology/debut_team> ?uri . <https://dbpedia.org/resource/Dan_Shamash?> <https://dbpedia.org/ontology/team> ?uri }",
        "dist": 11
    },
    {
        "_id": "3794",
        "intermediary_question": "What is the <official residence> of the <ice hockey players> whose <works at> is <Detroit Red Wings>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/Detroit_Red_Wings> . ?x <http://dbpedia.org/ontology/residence> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/works_at> <https://dbpedia.org/resource/Detroit_Red_Wings> . ?x <https://dbpedia.org/ontology/official_residence> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 78
    },
    {
        "_id": "3944",
        "intermediary_question": "What is the <nation> of the <companies> whose <headquarters> is <Klang Valley>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Klang_Valley> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?x <https://dbpedia.org/ontology/headquarters> <https://dbpedia.org/resource/Klang_Valley> . ?x <https://dbpedia.org/ontology/nation> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 65
    },
    {
        "_id": "4666",
        "intermediary_question": "Is <Chant mas> the <stylistic origin> of <West Africa>?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chant\u00e9_mas> <http://dbpedia.org/ontology/stylisticOrigin> <http://dbpedia.org/resource/West_Africa> }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/stylistic_origin> <https://dbpedia.org/ontology/Chant_mas> ?uri",
        "dist": 77
    },
    {
        "_id": "2018",
        "intermediary_question": "What is the <river> whose <mouth country> is <Mozambique> and <source region> is <North-Western Province, Zambia>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mouthCountry> <http://dbpedia.org/resource/Mozambique> . ?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/mouth_country> <https://dbpedia.org/resource/Mozambique> . ?uri <https://dbpedia.org/ontology/source_region> <https://dbpedia.org/resource/North-Western_Province,_Zambia> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 62
    },
    {
        "_id": "1096",
        "intermediary_question": "Give me a count of <bacterias> whose <class> is <Bacilli>?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Bacilli>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?uri <https://dbpedia.org/ontology/class> <https://dbpedia.org/resource/Bacilli> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>",
        "dist": 47
    },
    {
        "_id": "829",
        "intermediary_question": "Count the number of <producer> of the <television shows> whose <company> is <FremantleMedia>.",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/company> <http://dbpedia.org/resource/FremantleMedia> . ?x <http://dbpedia.org/ontology/producer> ?uri  . }",
        "sparql_prev": "SELECT DISTINCT COUNT ( ?uri ) WHERE { ?x <http://dbpedia.org/property/company> <https://dbpedia.org/resource/FremantleMedia> . ?x <https://dbpedia.org/ontology/producer> ?uri . }",
        "dist": 6
    },
    {
        "_id": "2805",
        "intermediary_question": "What <person>'s <board> is <Kate Spade & Company>",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Kate_Spade_&_Company>  . }",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/board> <",
        "dist": 56
    },
    {
        "_id": "3829",
        "intermediary_question": "Who is the <animator> of the <Tommy Tucker's Tooth> and <director> of the <The Haunted House (1929 film)>?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri. <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?uri} ",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { <https://dbpedia.org/resource/Tommy_Tucker's_Tooth> <https://dbpedia.org/ontology/animator> ?uri . <https://dbpedia.org/resource/the_The_Haunted_House_(1929_film)> <https://dbpedia.org/ontology/director> ?uri }",
        "dist": 19
    },
    {
        "_id": "4381",
        "intermediary_question": "What is the <university> whose <athletics> is <National Collegiate Athletic Association> and <chancellor> is <Nicholas S. Zeppos>?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?uri <http://dbpedia.org/property/chancellor> <http://dbpedia.org/resource/Nicholas_S._Zeppos>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "sparql_prev": "SELECT DISTINCT ?uri WHERE { ?uri <https://dbpedia.org/ontology/athletics> <https://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?uri <https://dbpedia.org/ontology/chancellor> <https://dbpedia.org/resource/Nicholas_S._Zeppos> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
        "dist": 56
    }
]